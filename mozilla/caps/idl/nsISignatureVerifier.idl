/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: NPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is 
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1999-2000
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 * Mitchell Stoltz <mstoltz@netscape.com>
 *
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the NPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the NPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/* An interface for calculating secure hashes and verifying signatures*/
#include "nsIPrincipal.idl"

//interface nsIX509Cert;

%{C++
struct HASHContextStr;
%}

[ptr] native UnsignedCharPtr(unsigned char);
[ptr] native HASHContextPtr(HASHContextStr);

[uuid(7bdbdb36-1dd2-11b2-a44f-e303037f214d)]
interface nsISignatureVerifier : nsISupports
{
   /* Sig Verification Error Codes */
  const long VERIFY_OK = 0;
  const long VERIFY_ERROR_UNKNOWN_CA  = -8172; /* -8172 is the error code returned by PSM */
  
  /* Hash Algorithms (based on cmtcmn.h) */ 
  const short MD2  = 1;
  const short MD5  = 2;
  const short SHA1 = 3;
  const unsigned long MD2_LENGTH  = 16;
  const unsigned long MD5_LENGTH  = 16;
  const unsigned long SHA1_LENGTH = 20;
  const unsigned long MAX_HASH_LENGTH = SHA1_LENGTH;

  /* Secure Hashing functions */
  HASHContextPtr hashBegin(in unsigned long alg);
  void hashUpdate(in HASHContextPtr id, in string buf, in unsigned long buflen);
  [noscript] void hashEnd(in HASHContextPtr id, out UnsignedCharPtr hash, 
                          out unsigned long hashlen, in unsigned long maxLen);
  
  nsIPrincipal verifySignature(in string aSignature,
                               in unsigned long aSignatureLen,
                               in string plaintext,
                               in unsigned long plaintextLen,
                               out long errorCode);
};


%{C++
#define SIGNATURE_VERIFIER_CONTRACTID "@mozilla.org/psm;1"
%}
