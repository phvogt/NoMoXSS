/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is Mozilla Communicator client code, 
 * released March 31, 1998. 
 *
 * The Initial Developer of the Original Code is Netscape Communications 
 * Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 *     Daniel Veditz <dveditz@netscape.com>
 *     Don Bragg <dbragg@netscape.com>
 *     Samir Gehani <sgehani@netscape.com>
 *     Mitch Stoltz <mstoltz@netscape.com>
 */

#include "nsISupports.idl"

%{C++
#define NS_JAR_CID                    \
{ /* 04501DB3-0409-11d3-BCF8-00805F0E1353*/  \
    0x04501DB3,                              \
    0x0409,                                  \
    0x11d3,                                  \
    {0xbc, 0xf8, 0x00, 0x80, 0x5f, 0x0e, 0x13, 0x53} \
}

#define NS_JAR_CONTRACTID \
  "@mozilla.org/libjar;1"

#define NS_IJARFactory_IID                    \
{ /* 04501DB4-0409-11d3-BCF8-00805F0E1353 */         \
    0x04501DB4,                                      \
    0x0409,                                          \
    0x11d3,                                          \
    {0xbc, 0xf8, 0x00, 0x80, 0x5f, 0x0e, 0x13, 0x53} \
}

#define NS_JARFactory_CID                 \
{ /* 04501DB5-0409-11d3-BCF8-00805F0E1353 */         \
    0x04501DB5,                                      \
    0x0409,                                          \
    0x11d3,                                          \
    {0xbc, 0xf8, 0x00, 0x80, 0x5f, 0x0e, 0x13, 0x53} \
}
%}

interface nsIPrincipal;

[uuid(04501DB2-0409-11d3-BCF8-00805F0E1353)]
interface nsIJAR : nsISupports
{

    const short NOT_SIGNED         = 0;
    const short VALID              = 1;
    const short INVALID_SIG        = 2;
    const short INVALID_UNKNOWN_CA = 3;
    const short INVALID_MANIFEST   = 4;
    const short INVALID_ENTRY      = 5;
    const short NO_MANIFEST        = 6;

     /**
     * Returns an object describing the entity which signed 
     * an entry. parseManifest must be called first. If aEntryName is an
     * entry in the jar, getInputStream must be called after parseManifest.
     * If aEntryName is an external file which has meta-information 
     * stored in the jar, verifyExternalFile (not yet implemented) must 
     * be called before getPrincipal.
     */
    void getCertificatePrincipal(in string aEntryName, out nsIPrincipal aPrincipal);   
    
    readonly attribute PRUint32 manifestEntriesCount;

};

