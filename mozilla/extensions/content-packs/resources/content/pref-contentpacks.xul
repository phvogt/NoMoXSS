<?xml version="1.0"?> 
<!--
   The contents of this file are subject to the Netscape Public
   License Version 1.1 (the "License"); you may not use this file
   except in compliance with the License. You may obtain a copy of
   the License at http://www.mozilla.org/NPL/
    
   Software distributed under the License is distributed on an "AS
   IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
   implied. See the License for the specific language governing
   rights and limitations under the License.

  Contributor(s):   J.Betak     <jbetak@netscape.com>
                    Josh Soref  <timeless@mac.com>
  -->

<?xml-stylesheet href="chrome://communicator/skin/" type="text/css"?>
<?xul-overlay href="chrome://communicator/content/utilityOverlay.xul"?>
 
<!DOCTYPE page [
<!ENTITY % brandDTD SYSTEM "chrome://global/locale/brand.dtd" >
%brandDTD;
<!ENTITY % regionDTD SYSTEM "chrome://global-region/locale/region.dtd" >
%regionDTD;
<!ENTITY % prefContentDTD SYSTEM "chrome://content-packs/locale/pref-contentpacks.dtd" >
%prefContentDTD;
]>

<page xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      onload="parent.initPanel('chrome://content-packs/content/pref-contentpacks.xul'); "
      headertitle="&lHeader;">

  <script type="application/x-javascript">
  <![CDATA[
    var _elementIDs = ["contentPackList", "languagePackList"];


    function Startup()
    {
      var contentList = document.getElementById( "contentPackList" );
      var regionName = contentList.getAttribute("prefvalue");
      var regionElements = contentList.getElementsByAttribute("value", regionName);

      if (regionElements.length) {
        contentList.selectItem(regionElements[0]);
      } else {
        contentList.selectedIndex = 0;
      }

      var languageList = document.getElementById( "languagePackList" );
      var languageName = languageList.getAttribute("prefvalue");
      var languageElements =languageList.getElementsByAttribute("value", languageName);

      if (languageElements.length) {
        languageList.selectItem(languageElements[0]);
      } else {
        languageList.selectedIndex = 0;
      }
      parent.hPrefWindow.registerOKCallbackFunc( SwitchPacks );
    }

    function SwitchPacks()
    {
      var shouldRemoveFaslFile = false;
      //Switch the Content pack if necessary
      var oldContentPack = parent.hPrefWindow.getPref( "localizedstring", "general.useragent.contentlocale");
      var newContentPack = parent.hPrefWindow.wsm.dataManager.getItemData( "chrome://content-packs/content/pref-contentpacks.xul", "contentPackList" ).prefvalue;
      if (newContentPack && (newContentPack != oldContentPack))
      {
        try {
          parent.hPrefWindow.chromeRegistry.selectLocale(newContentPack, true);
          shouldRemoveFaslFile = true;
          parent.hPrefWindow.observerService.notifyObservers(null, "locale-selected", null);
        }
        catch(e) {}
      }

      //Switch the Language pack if necessary
      var oldLanguagePack = parent.hPrefWindow.getPref( "localizedstring", "general.useragent.locale");
      var newLanguagePack = parent.hPrefWindow.wsm.dataManager.getItemData( "chrome://content-packs/content/pref-contentpacks.xul", "languagePackList" ).prefvalue;
      if (newLanguagePack && (newLanguagePack != oldLanguagePack))
      {
        try {
          parent.hPrefWindow.chromeRegistry.selectLocale(newLanguagePack, true);
          shouldRemoveFaslFile = true;
          parent.hPrefWindow.observerService.notifyObservers(null, "locale-selected", null);
        }
        catch(e) {}
      }

      // If we changed locale, we need to destroy the fastload file so that it
      // will load the language strings from the new locale jars. No one should
      // have the fastload file open at this moment, so the remove should succeed.
      // (XXX actually there is a small window where this is possible, in which 
      // case we're screwed).
      // XXX This should really be done in the chrome registry itself, not be in
      // front-end code, but this patch is only to get this mostly working for 1.1b
      // The code below must die before 1.1final!!
      if (shouldRemoveFaslFile) {
        try {
          const XUL_FASTLOAD_FILE_BASENAME = "XUL";
          var faslService = Components.classes['@mozilla.org/fast-load-service;1']
            .getService(Components.interfaces.nsIFastLoadService);
          var faslFile = faslService.newFastLoadFile(XUL_FASTLOAD_FILE_BASENAME);
          faslFile.remove(false);
        } catch(e) {}
      }
	    return true;
    }

    function SelectPack(listbox, button)
    {
      var list = document.getElementById(listbox);
      var selectedItem = list.selectedItems.length ? list.selectedItems[0] : null;

      if (selectedItem) {
        var uninstallButton = document.getElementById(button);
        var packID = selectedItem.getAttribute("value");

        //current chrome providers cannot be unistalled
        uninstallButton.disabled = (packID == parent.hPrefWindow.getPref("localizedstring", list.getAttribute("prefstring")));

        //out-of-date packs cannot become chrome providers
        if (selectedItem.getAttribute("class") == "outofdate") 
          list.setAttribute("prefvalue", parent.hPrefWindow.getPref("localizedstring", list.getAttribute("prefstring")));
        else
          list.setAttribute("prefvalue", packID);
      }
    }

    function UninstallPack(listbox)
    {
      var list = document.getElementById(listbox);
      var selectedContentItem = list.selectedItems[0];
      var packName = selectedContentItem.getAttribute("value");

      try {
        //uninstall from global chrome
        parent.hPrefWindow.chromeRegistry.uninstallLocale(packName, false);

        //uninstall from profile-bound chrome
        parent.hPrefWindow.chromeRegistry.uninstallLocale(packName, true);
      }
      catch(e) {}
      
      if (packName == list.getAttribute("prefvalue"))
        list.setAttribute("prefvalue", parent.hPrefWindow.getPref("localizedstring", list.getAttribute("prefstring")));

      //removed items cannot become chrome providers
      var listSelection = list.getElementsByAttribute("value", list.getAttribute("prefvalue"));
      
      //find and select the list item corresponding to the current chrome provider
      if (listSelection.length)
        list.selectedItem = listSelection[0];
      else
        list.selectedIndex = 0;
    }

    function DownloadRegionPacks()
    {
      openTopWin(xlateURL("urn:clienturl:viewmenu:intlwebcontent"));
    }
  ]]>
  </script>

  <hbox class="box-smallheader" title="&lHeader;"/>

  <!-- Language pack listbox -->
  <description>&languageIntro.label;</description>
  <separator class="thin"/>

  <description>&installedLanguagePacks.label;</description>
  <listbox id="languagePackList" flex="1" rows="3" 
        ref="urn:mozilla:locale:root" 
        datasources="rdf:chrome"
        sortResource="http://www.mozilla.org/rdf/chrome#name"
        preftype="localizedstring" 
        prefstring="general.useragent.locale" 
        prefattribute="prefvalue" 
        wsm_attributes="value"
        seltype="false" 
        onselect="SelectPack('languagePackList', 'uninstallLanguagePack');"
        sortDirection="ascending">
    <template xmlns:chrome="http://www.mozilla.org/rdf/chrome#">

      <!-- This rule eliminates region packs from the language pack list -->
      <rule chrome:localeType="region"/>

      <!-- This rule displays only up to date language packs based on the localeVersion -->
      <rule chrome:localeVersion="&lang.version;">
        <listitem uri="..." translation="true" nselected="false" 
                  label="rdf:http://www.mozilla.org/rdf/chrome#displayName"
                  value="rdf:http://www.mozilla.org/rdf/chrome#name"/>
      </rule>

      <!-- This rule "falls through" to match obsolete language packs -->
      <rule>
        <listitem uri="..." translation="true" nselected="false" class="outofdate"
                  label="rdf:http://www.mozilla.org/rdf/chrome#displayName &update.label;"
                  value="rdf:http://www.mozilla.org/rdf/chrome#name"/>
      </rule>
    </template>
  </listbox>

  <hbox>
    <vbox>
      <button id="uninstallLanguagePack" 
              label="&uninstallLanguagePack.label;" 
              accesskey="&uninstallLanguagePack.accesskey;" 
              oncommand="UninstallPack('languagePackList')"/>
    </vbox>
    <vbox>
    <button id="downloadLanguagePacks" 
            label="&downloadLanguagePacks.label;" 
            accesskey="&downloadLanguagePacks.accesskey;" 
            oncommand="DownloadRegionPacks()"/>
    </vbox>
  </hbox>

  <!-- Content (aka region) pack listbox -->
  <separator class="thin"/>
  <description>&contentIntro.label;</description>

  <description>&installedContentPacks.label;</description>
  <listbox id="contentPackList" flex="1" rows="3" 
        ref="urn:mozilla:locale:root" datasources="rdf:chrome"
        sortResource="http://www.mozilla.org/rdf/chrome#name"
        preftype="localizedstring" prefstring="general.useragent.contentlocale" 
        prefvalue="" prefattribute="prefvalue" wsm_attributes="prefvalue"
        seltype="false"         
        onselect="SelectPack('contentPackList', 'uninstallContentPack');"
        sortDirection="ascending">

    <template xmlns:chrome="http://www.mozilla.org/rdf/chrome#">
      
      <!-- This rule displays only up to date content packs based on the localeVersion -->
      <rule chrome:localeType="region" chrome:localeVersion="&content.version;">
        <listitem uri="..." translation="true" nselected="false"
                  label="rdf:http://www.mozilla.org/rdf/chrome#displayName"
                  value="rdf:http://www.mozilla.org/rdf/chrome#name"/>
      </rule>

      <!-- This rule "falls through" to match obsolete content packs -->
      <rule chrome:localeType="region">
        <listitem uri="..." translation="true" nselected="false" class="outofdate"
                  label="rdf:http://www.mozilla.org/rdf/chrome#displayName &update.label;"
                  value="rdf:http://www.mozilla.org/rdf/chrome#name"/>
      </rule>
    
    </template>
  </listbox>

  <hbox>
    <vbox>
      <button id="uninstallContentPack" 
              label="&uninstallContentPack.label;" 
              accesskey="&uninstallContentPack.accesskey;" 
              oncommand="UninstallPack('contentPackList')"/>
    </vbox>
    <vbox>
    <button id="downloadContentPacks" 
            label="&downloadContentPacks.label;" 
            accesskey="&downloadContentPacks.accesskey;" 
            oncommand="DownloadRegionPacks()"/>
    </vbox>
  </hbox>

  <separator class="thin"/>
  <description>&restartOnLangChange.label;</description>
  <separator class="thin"/>

</page>
