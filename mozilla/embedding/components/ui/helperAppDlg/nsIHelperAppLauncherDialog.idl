/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: NPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is 
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the NPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the NPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "domstubs.idl"

interface nsIHelperAppLauncher;
interface nsILocalFile;

/**
 * nsIHelperAppLauncherDialog
 * ==========================
 * This interface is used to display a confirmatino dialog before
 * launching a "helper app" to handle content not handled by
 * Mozilla.
 *
 * Usage:  Clients (of which there is one: the nsIExternalHelperAppService
 * implementation in mozilla/uriloader/exthandler) create an instance of
 * this interface (using the contract ID) and then call the show() method.
 *
 * The dialog is shown non-modally.  The implementation of the dialog
 * will access methods of the nsIHelperAppLauncher passed in to show()
 * in order to cause a "save to disk" or "open using" action.
 *
 * Note: The promptForSaveToFile method is
 *       obsolescent.  Caller(s) will be converted to use specific
 *       file-picker and progress-dialog interfaces.
 */

[scriptable, uuid(d7ebddf0-4c84-11d4-807a-00600811a9c3)]
interface nsIHelperAppLauncherDialog : nsISupports {
  // Show confirmation dialog for launching application (or "save to
  // disk") for content specified by aLauncher.
  // aForced is used to indicate whether this dialog was shown even though
  // the content could have been handled by mozilla; this is used if
  // an HTTP Server sends Content-Disposition: attachment
  void show(in nsIHelperAppLauncher aLauncher,
            in nsISupports aContext,
            in boolean aForced);
	
	// invoke a save to file dialog instead of the full fledged helper app dialog.
	// aDefaultFileName --> default file name to provide (can be null)
	// aSuggestedFileExtension --> sugested file extension
	// aFileLocation --> return value for the file location
  nsILocalFile promptForSaveToFile(in nsIHelperAppLauncher aLauncher, 
                                   in nsISupports aWindowContext, 
                                   in wstring aDefaultFile, 
                                   in wstring aSuggestedFileExtension);
};


%{C++
#define NS_IHELPERAPPLAUNCHERDLG_CONTRACTID    "@mozilla.org/helperapplauncherdialog;1"
#define NS_IHELPERAPPLAUNCHERDLG_CLASSNAME "Mozilla Helper App Launcher Confirmation Dialog"
%}
