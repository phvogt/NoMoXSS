<?xml version="1.0"?>
<!-- Descrpt: Test nsIAccessible Interface attributes and methods
     for XUL CHECKBOX Unchecked Node
     Author: dsirnapalli@netscape.com
     Created: 05.23.02 - Created
     Last Updated:06.12.02.

   - The contents of this file are subject to the Mozilla Public
   - License Version 1.1 (the "License"); you may not use this file
   - except in compliance with the License. You may obtain a copy of
   - the License at http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS
   - IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
   - implied. See the License for the specific language governing
   - rights and limitations under the License.
   -
   - The Original Code is Mozilla Communicator Test Cases.
   -
   - The Initial Developer of the Original Code is Netscape Communications
   - Corp.  Portions created by Netscape Communications Corp. are
   - Copyright (C) 1999 Netscape Communications Corp.  All
   - Rights Reserved.
   -
   - Contributor(s):
  -->

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<window
  id="checkboxunchecked-window"
  title="XUL Checkbox Unchecked"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <html:script src="http://www.mozilla.org/quality/embed/jstests/accessibility/jslib/accesslib.js"> </html:script>
  <html:script src="http://www.mozilla.org/quality/embed/jstests/accessibility/jslib/bridge.js"> </html:script>

  <html:script>
  <![CDATA[

  function getDomNodeCheckBoxUnchecked()
  {
   try{
    netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
  
    var node = document.getElementsByTagName("checkbox").item(0);
    return node;
   }
   catch(e){
    alert("Exception: " + e);
   }
  }

  function nodeChecked()
  {
    nodeCheck = "Check Box Checked";
  }

  function executeTestCase()
  {
    var domNode = getDomNodeCheckBoxUnchecked();
    domNode.addEventListener('focus',nodeFocused,true);
    domNode.addEventListener('click', nodeChecked,true);

    accNode = getAccessibleNode(domNode);
    tempaccNode = accNode;
    try{
      netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
      netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");

      accNode.accTakeFocus();
    }
    catch(e){
      alert("Exception**: " + e);
    }
    setTimeout("constructResults();", 2000);
  }
  
  function constructResults()
  {
   try{
    netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");

    if(tempaccNode.accGetDOMNode() == accNode.accFocused.accGetDOMNode())
    {
      varaccFocused = "Focused";
    }
    else
    {
      varaccFocused = "Not Focused";
    }
    
    var name = getName();
    var role = getRole();
    var state = getState();
    var value = getValue();
    var newvalue = value.toString();
    var numActions = getNumActions();
    var actionName = getActionName();
    var action = doAction();
    var keyboardShortcut = getAccKeyboardShortcut();

    var expectedName          = "Checkbox Label";
    var expectedRole          = "44";
    var expectedState         = "1048580";
    var expectedValue         = "NS_ERROR_NOT_IMPLEMENTED";
    var expectednodeFocus     = "Focused";
    var expectedaccFocused    = "Focused";
    var expectednumActions    = "1";
    var expectedactionName    = "check";
    var expectednodeCheck     = "Check Box Checked";
    var expectedkeyboardShortcut = "Alt+b";

    var row0 = new Array("Property/Method", "Expected Values", "Actual Values", "Result");
    var row1 = new Array("Name->", expectedName, name);
    var row2 = new Array("Role->", expectedRole, role);
    var row3 = new Array("State->", expectedState, state);
    var row4 = new Array("Value->", expectedValue, value);
    var row5 = new Array("accTakeFocus()->", expectednodeFocus, nodeFocus);
    var row6 = new Array("accFocused->", expectedaccFocused, varaccFocused);
    var row7 = new Array("accNumActions->", expectednumActions, numActions);
    var row8 = new Array("getAccActionName()->", expectedactionName, actionName);
    var row9 = new Array("accDoAction()->", expectednodeCheck, nodeCheck);
    var row10 = new Array("accKeyboardShortcut->", expectedkeyboardShortcut, keyboardShortcut);

    row = new Array(row0, row1, row2, row3, row4, row5, row6, row7, row8, row9, row10);

    if (name == expectedName)                 row1[3] = "PASS"; else row1[3] = "FAIL";
    if (role == expectedRole)                 row2[3] = "PASS"; else row2[3] = "FAIL";
    if (state == expectedState)               row3[3] = "PASS"; else row3[3] = "FAIL";
    if (newvalue.match(expectedValue))        row4[3] = "PASS"; else row4[3] = "FAIL";
    if (nodeFocus == expectednodeFocus)       row5[3] = "PASS"; else row5[3] = "FAIL";
    if (varaccFocused == expectedaccFocused)  row6[3] = "PASS"; else row6[3] = "FAIL";
    if (numActions == expectednumActions)     row7[3] = "PASS"; else row7[3] = "FAIL";
    if (actionName == expectedactionName)     row8[3] = "PASS"; else row8[3] = "FAIL";
    if (nodeCheck == expectednodeCheck)       row9[3] = "PASS"; else row9[3] = "FAIL";
    if (keyboardShortcut == expectedkeyboardShortcut)
                                              row10[3] = "PASS"; else row10[3] = "FAIL";

    appendTableRes();
    WriteResults(res);
   }
   catch(e){
    alert("Exception**: " + e);
   }
  }
  
  ]]>
  </html:script>
  
  <box orient="vertical">
    <description>
      <html:b> Testing XUL Checkbox Unchecked for Accessibility.. </html:b>            
    </description>
    <box orient="horizontal">
      <!-- Checkbox Unchecked -->
      <checkbox id="case-sensitive" label="Checkbox Label" accesskey="b"/>
      <spacer flex="1"/>
    </box>
  </box>
  
  <html:script>
  <![CDATA[
    res = "<b><u> Results for XUL Checkbox Unchecked Node:</u></b><br><br>";
    nodeFocus = "Not Focused";
    nodeCheck = "Check Box Not Checked";
    
    setTimeout("executeTestCase();", 2000);
  ]]>
  </html:script>
  
</window>   