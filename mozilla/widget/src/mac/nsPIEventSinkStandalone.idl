/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is the Mozilla browser.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation. Portions created by Netscape are
 * Copyright (C) 1999 Netscape Communications Corporation. All
 * Rights Reserved.
 * 
 * Contributor(s): 
 */


#include "nsISupports.idl"


/**
 * The nsPIEventSinkStandalone is implemented internally by Gecko as the conduit
 * through which native menu events travel into Gecko. You obtain an
 * event sink by QI'ing the top-level nsIWidget, usually a window.
 *
 * This api extends nsIEventSink for events that the stand-alone mozilla
 * client needs but embedding does not. It is not intended to be public.
 */
 
[uuid(912fa496-91ab-4bba-b502-524218ffb1b1)]
interface nsPIEventSinkStandalone : nsISupports
{
  /**
   * Entry point for native menu events into Gecko.
   *
   * @return <code>PR_TRUE</code> if event was handled
   *         <code>PR_FALSE</code> if not handled
   *
   * @param anEvent        a native <code>EventRecord*</code>. 
   * @param aNativeResult  the result of ::MenuSelect().
   */
   boolean dispatchMenuEvent ( in voidPtr anEvent, in long aNativeResult ) ;
};