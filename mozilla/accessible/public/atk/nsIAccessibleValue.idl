/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is the Mozilla browser.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation. Portions created by Netscape are
 * Copyright (C) 1999 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Original Author: Marc Mulcahy (marc.mulcahy@sun.com)
 *
 * Contributor(s): 
 *          John Gaunt (jgaunt@netscape.com)
 */

#include "nsISupports.idl"

[scriptable, uuid(F4ABBC2F-0F28-47DC-A9E9-F7A1719AB2BE)]
interface nsIAccessibleValue : nsISupports
{
  readonly attribute double maximumValue;
  readonly attribute double minimumValue;
  readonly attribute double currentValue;

    /**
      * We want to be able to return a success condition of the value
      *   getting set. ie if the value is not within the interval of
      *   minimumValue-maximumValue
      */
  boolean setCurrentValue (in double value);
};

/*
 Assumptions:

 The attribute currentValue will throw an exception
 if it cannot be set i.e. if the value is not a
 member of the interval.
 This may not be the 'desired' behaviour given gObject
 equivalent. Thus it could be changed to be:

 readonly attribute double currentValue;
 boolean setCurrentValue (double long value);

 GValue can represent many basic types.
 Since this interface is designed to represent
 an interval and a member of double should
 cover the cases of char int and float.

*/
