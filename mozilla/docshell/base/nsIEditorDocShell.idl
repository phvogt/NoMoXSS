/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is the Mozilla browser.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications, Inc.  Portions created by Netscape are
 * Copyright (C) 1999, Mozilla.  All Rights Reserved.
 * 
 * Contributor(s):
 *   Simon Fraser   <sfraser@netscape.com>
 *   Charles Manske <cmanske@netscape.com>
 */

#include "nsISupports.idl"

interface nsIEditor;

/**
 * nsIEditorDocShell provides a way to get an editor from
 * a specific frame in a docShell hierarchy. It is intended
 * to be only used internally. Use nsIEditingShell.getEditorForFrame
 * from out side.
 */

[scriptable, uuid(3BDB8F01-F141-11D4-A73C-FBA4ABA8A3FC)]
interface nsIEditorDocShell : nsISupports
{
             attribute  nsIEditor editor;
    readonly attribute  boolean   editable;             /* this docShell is editable */
    readonly attribute  boolean   hasEditingSession;    /* this docShell has an editing session */
    
    /**
     * Make this docShell editable, setting a flag that causes
     * an editor to get created, either immediately, or after
     * a url has been loaded.
     *      @param  inWaitForUriLoad    true to wait for a URI before
     *                                  creating the editor.
     */     
    void makeEditable(in boolean inWaitForUriLoad);
};

