#
# The contents of this file are subject to the Netscape Public
# License Version 1.1 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at http://www.mozilla.org/NPL/
#
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is Netscape
# Communications Corporation.  Portions created by Netscape are
# Copyright (C) 1998 Netscape Communications Corporation. All
# Rights Reserved.
#
# Contributor(s): 
#

DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= necko
LIBRARY_NAME	= necko
EXPORT_LIBRARY = 1
IS_COMPONENT	= 1
MODULE_NAME	= necko_core_and_primary_protocols
GRE_MODULE	= 1

PACKAGE_FILE = necko.pkg

ifdef ENABLE_TESTS
PACKAGE_FILE += necko-tests.pkg
endif

REQUIRES	= xpcom \
		  string \
		  nkcache \
		  pref \
		  mimetype \
		  util \
		  jar \
		  locale \
		  intl \
		  uconv \
		  unicharutil \
		  caps \
		  $(ZLIB_REQUIRES) \
		  $(NULL)

CPPSRCS		= nsNetModule.cpp
EXPORTS		= nsNetCID.h

# core necko protocols (about:blank is mandatory)
PROTOCOLS = $(filter file ftp http jar res,$(NECKO_PROTOCOLS))

SHARED_LIBRARY_LIBS = \
		$(DIST)/lib/$(LIB_PREFIX)neckobase_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)neckodns_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)neckosocket_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)nkconv_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)nkcnvts_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)nkmime_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)nkcache_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)nkabout_s.$(LIB_SUFFIX) \
		$(foreach d,$(PROTOCOLS), \
			$(DIST)/lib/$(LIB_PREFIX)nk${d}_s.$(LIB_SUFFIX)) \
		$(NULL)

LOCAL_INCLUDES	= \
		-I$(srcdir)/../base/src \
		-I$(srcdir)/../dns/src \
		-I$(srcdir)/../socket/base \
		-I$(srcdir)/../streamconv/src \
		-I$(srcdir)/../streamconv/converters \
		-I$(srcdir)/../mime/src \
		-I$(srcdir)/../cache/src \
		-I$(srcdir)/../protocol/about/src \
		$(foreach d,$(PROTOCOLS), \
			-I$(srcdir)/../protocol/${d}/src) \
		$(NULL)

ifdef NECKO_COOKIES
SHARED_LIBRARY_LIBS += \
		$(DIST)/lib/$(LIB_PREFIX)neckocookie_s.$(LIB_SUFFIX) \
                $(NULL)
LOCAL_INCLUDES	+= -I$(srcdir)/../cookie/src
endif

ifdef MOZ_PERF_METRICS
EXTRA_DSO_LIBS	+= mozutil_s
endif

EXTRA_DSO_LDOPTS = \
		$(LIBS_DIR) \
		$(EXTRA_DSO_LIBS) \
		$(MOZ_UNICHARUTIL_LIBS) \
		$(MOZ_COMPONENT_LIBS) \
		$(ZLIB_LIBS) \
		$(NULL)

ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
EXTRA_DSO_LDOPTS += \
		$(TK_LIBS) \
	$(NULL)
endif

ifeq ($(OS_ARCH),AIX)
EXTRA_DSO_LDOPTS += -lodm -lcfg
endif

include $(topsrcdir)/config/rules.mk

ifeq ($(OS_ARCH),WINNT)
ifdef GNU_CC
OS_LIBS		+= -lwsock32
endif
endif
