/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 *       David Drinan <ddrinan@netscape.com>
 *       Scott MacGregor <mscott@netscape.com> 
 *       Stephane Saux <ssaux@netscape.com>
 */

#include "nsIMsgSendReport.idl"
#include "nsISupports.idl"

interface nsIMsgCompFields;
interface nsIMsgIdentity;

%{C++
class nsOutputFileStream;
%}

[ptr] native nsOutputFileStream(nsOutputFileStream);

/* Security interface */
[noscript, uuid(ed899511-b473-4a93-ba02-d8cb90d58e1c)]
interface nsIMsgComposeSecure : nsISupports 
{
    // requiresCryptoEncapsulation --> returns true if the current message send requires us to go through
	// some encryption work. In the case of false, you can disregard the compose secure object.
    boolean requiresCryptoEncapsulation(in nsIMsgIdentity aIdentity, in nsIMsgCompFields aCompFields);

	void beginCryptoEncapsulation(in nsOutputFileStream aStream, in string aRecipients, in nsIMsgCompFields aCompFields, in nsIMsgIdentity aIdentity, in nsIMsgSendReport sendReport, in boolean aIsDraft);
	void finishCryptoEncapsulation(in boolean aAbort, in nsIMsgSendReport sendReport);
	void mimeCryptoWriteBlock(in string aBuf, in long aLen);
};
